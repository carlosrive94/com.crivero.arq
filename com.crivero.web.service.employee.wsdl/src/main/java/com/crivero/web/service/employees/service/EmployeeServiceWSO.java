package com.crivero.web.service.employees.service;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;

/**
 * This class was generated by Apache CXF 2.7.8
 * 2016-11-03T10:35:16.506+01:00
 * Generated source version: 2.7.8
 * 
 */
@WebServiceClient(name = "employeeServiceWSO", 
                  wsdlLocation = "http://localhost:9764/services/employeeServiceWSO?wsdl",
                  targetNamespace = "http://service.employees.service.web.crivero.com") 
public class EmployeeServiceWSO extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("http://service.employees.service.web.crivero.com", "employeeServiceWSO");
    public final static QName EmployeeServiceWSOHttpsSoap11Endpoint = new QName("http://service.employees.service.web.crivero.com", "employeeServiceWSOHttpsSoap11Endpoint");
    public final static QName EmployeeServiceWSOHttpsSoap12Endpoint = new QName("http://service.employees.service.web.crivero.com", "employeeServiceWSOHttpsSoap12Endpoint");
    public final static QName EmployeeServiceWSOHttpEndpoint = new QName("http://service.employees.service.web.crivero.com", "employeeServiceWSOHttpEndpoint");
    public final static QName EmployeeServiceWSOHttpSoap12Endpoint = new QName("http://service.employees.service.web.crivero.com", "employeeServiceWSOHttpSoap12Endpoint");
    public final static QName EmployeeServiceWSOHttpSoap11Endpoint = new QName("http://service.employees.service.web.crivero.com", "employeeServiceWSOHttpSoap11Endpoint");
    public final static QName EmployeeServiceWSOHttpsEndpoint = new QName("http://service.employees.service.web.crivero.com", "employeeServiceWSOHttpsEndpoint");
    static {
        URL url = null;
        try {
            url = new URL("http://localhost:9764/services/employeeServiceWSO?wsdl");
        } catch (MalformedURLException e) {
            java.util.logging.Logger.getLogger(EmployeeServiceWSO.class.getName())
                .log(java.util.logging.Level.INFO, 
                     "Can not initialize the default wsdl from {0}", "http://localhost:9764/services/employeeServiceWSO?wsdl");
        }
        WSDL_LOCATION = url;
    }

    public EmployeeServiceWSO(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public EmployeeServiceWSO(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public EmployeeServiceWSO() {
        super(WSDL_LOCATION, SERVICE);
    }
    
    //This constructor requires JAX-WS API 2.2. You will need to endorse the 2.2
    //API jar or re-run wsdl2java with "-frontend jaxws21" to generate JAX-WS 2.1
    //compliant code instead.
    public EmployeeServiceWSO(WebServiceFeature ... features) {
        super(WSDL_LOCATION, SERVICE, features);
    }

    //This constructor requires JAX-WS API 2.2. You will need to endorse the 2.2
    //API jar or re-run wsdl2java with "-frontend jaxws21" to generate JAX-WS 2.1
    //compliant code instead.
    public EmployeeServiceWSO(URL wsdlLocation, WebServiceFeature ... features) {
        super(wsdlLocation, SERVICE, features);
    }

    //This constructor requires JAX-WS API 2.2. You will need to endorse the 2.2
    //API jar or re-run wsdl2java with "-frontend jaxws21" to generate JAX-WS 2.1
    //compliant code instead.
    public EmployeeServiceWSO(URL wsdlLocation, QName serviceName, WebServiceFeature ... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     *
     * @return
     *     returns EmployeeServiceWSOPortType
     */
    @WebEndpoint(name = "employeeServiceWSOHttpsSoap11Endpoint")
    public EmployeeServiceWSOPortType getEmployeeServiceWSOHttpsSoap11Endpoint() {
        return super.getPort(EmployeeServiceWSOHttpsSoap11Endpoint, EmployeeServiceWSOPortType.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns EmployeeServiceWSOPortType
     */
    @WebEndpoint(name = "employeeServiceWSOHttpsSoap11Endpoint")
    public EmployeeServiceWSOPortType getEmployeeServiceWSOHttpsSoap11Endpoint(WebServiceFeature... features) {
        return super.getPort(EmployeeServiceWSOHttpsSoap11Endpoint, EmployeeServiceWSOPortType.class, features);
    }
    /**
     *
     * @return
     *     returns EmployeeServiceWSOPortType
     */
    @WebEndpoint(name = "employeeServiceWSOHttpsSoap12Endpoint")
    public EmployeeServiceWSOPortType getEmployeeServiceWSOHttpsSoap12Endpoint() {
        return super.getPort(EmployeeServiceWSOHttpsSoap12Endpoint, EmployeeServiceWSOPortType.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns EmployeeServiceWSOPortType
     */
    @WebEndpoint(name = "employeeServiceWSOHttpsSoap12Endpoint")
    public EmployeeServiceWSOPortType getEmployeeServiceWSOHttpsSoap12Endpoint(WebServiceFeature... features) {
        return super.getPort(EmployeeServiceWSOHttpsSoap12Endpoint, EmployeeServiceWSOPortType.class, features);
    }
    /**
     *
     * @return
     *     returns EmployeeServiceWSOPortType
     */
    @WebEndpoint(name = "employeeServiceWSOHttpEndpoint")
    public EmployeeServiceWSOPortType getEmployeeServiceWSOHttpEndpoint() {
        return super.getPort(EmployeeServiceWSOHttpEndpoint, EmployeeServiceWSOPortType.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns EmployeeServiceWSOPortType
     */
    @WebEndpoint(name = "employeeServiceWSOHttpEndpoint")
    public EmployeeServiceWSOPortType getEmployeeServiceWSOHttpEndpoint(WebServiceFeature... features) {
        return super.getPort(EmployeeServiceWSOHttpEndpoint, EmployeeServiceWSOPortType.class, features);
    }
    /**
     *
     * @return
     *     returns EmployeeServiceWSOPortType
     */
    @WebEndpoint(name = "employeeServiceWSOHttpSoap12Endpoint")
    public EmployeeServiceWSOPortType getEmployeeServiceWSOHttpSoap12Endpoint() {
        return super.getPort(EmployeeServiceWSOHttpSoap12Endpoint, EmployeeServiceWSOPortType.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns EmployeeServiceWSOPortType
     */
    @WebEndpoint(name = "employeeServiceWSOHttpSoap12Endpoint")
    public EmployeeServiceWSOPortType getEmployeeServiceWSOHttpSoap12Endpoint(WebServiceFeature... features) {
        return super.getPort(EmployeeServiceWSOHttpSoap12Endpoint, EmployeeServiceWSOPortType.class, features);
    }
    /**
     *
     * @return
     *     returns EmployeeServiceWSOPortType
     */
    @WebEndpoint(name = "employeeServiceWSOHttpSoap11Endpoint")
    public EmployeeServiceWSOPortType getEmployeeServiceWSOHttpSoap11Endpoint() {
        return super.getPort(EmployeeServiceWSOHttpSoap11Endpoint, EmployeeServiceWSOPortType.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns EmployeeServiceWSOPortType
     */
    @WebEndpoint(name = "employeeServiceWSOHttpSoap11Endpoint")
    public EmployeeServiceWSOPortType getEmployeeServiceWSOHttpSoap11Endpoint(WebServiceFeature... features) {
        return super.getPort(EmployeeServiceWSOHttpSoap11Endpoint, EmployeeServiceWSOPortType.class, features);
    }
    /**
     *
     * @return
     *     returns EmployeeServiceWSOPortType
     */
    @WebEndpoint(name = "employeeServiceWSOHttpsEndpoint")
    public EmployeeServiceWSOPortType getEmployeeServiceWSOHttpsEndpoint() {
        return super.getPort(EmployeeServiceWSOHttpsEndpoint, EmployeeServiceWSOPortType.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns EmployeeServiceWSOPortType
     */
    @WebEndpoint(name = "employeeServiceWSOHttpsEndpoint")
    public EmployeeServiceWSOPortType getEmployeeServiceWSOHttpsEndpoint(WebServiceFeature... features) {
        return super.getPort(EmployeeServiceWSOHttpsEndpoint, EmployeeServiceWSOPortType.class, features);
    }

}
