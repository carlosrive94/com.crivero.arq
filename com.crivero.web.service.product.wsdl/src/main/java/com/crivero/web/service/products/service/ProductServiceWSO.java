package com.crivero.web.service.products.service;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;

/**
 * This class was generated by Apache CXF 2.7.8
 * 2016-11-08T13:38:09.779+01:00
 * Generated source version: 2.7.8
 * 
 */
@WebServiceClient(name = "productServiceWSO", 
                  wsdlLocation = "http://localhost:9764/services/productServiceWSO?wsdl",
                  targetNamespace = "http://service.products.service.web.crivero.com") 
public class ProductServiceWSO extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("http://service.products.service.web.crivero.com", "productServiceWSO");
    public final static QName ProductServiceWSOHttpEndpoint = new QName("http://service.products.service.web.crivero.com", "productServiceWSOHttpEndpoint");
    public final static QName ProductServiceWSOHttpSoap12Endpoint = new QName("http://service.products.service.web.crivero.com", "productServiceWSOHttpSoap12Endpoint");
    public final static QName ProductServiceWSOHttpsEndpoint = new QName("http://service.products.service.web.crivero.com", "productServiceWSOHttpsEndpoint");
    public final static QName ProductServiceWSOHttpSoap11Endpoint = new QName("http://service.products.service.web.crivero.com", "productServiceWSOHttpSoap11Endpoint");
    public final static QName ProductServiceWSOHttpsSoap11Endpoint = new QName("http://service.products.service.web.crivero.com", "productServiceWSOHttpsSoap11Endpoint");
    public final static QName ProductServiceWSOHttpsSoap12Endpoint = new QName("http://service.products.service.web.crivero.com", "productServiceWSOHttpsSoap12Endpoint");
    static {
        URL url = null;
        try {
            url = new URL("http://localhost:9764/services/productServiceWSO?wsdl");
        } catch (MalformedURLException e) {
            java.util.logging.Logger.getLogger(ProductServiceWSO.class.getName())
                .log(java.util.logging.Level.INFO, 
                     "Can not initialize the default wsdl from {0}", "http://localhost:9764/services/productServiceWSO?wsdl");
        }
        WSDL_LOCATION = url;
    }

    public ProductServiceWSO(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public ProductServiceWSO(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public ProductServiceWSO() {
        super(WSDL_LOCATION, SERVICE);
    }
    
    //This constructor requires JAX-WS API 2.2. You will need to endorse the 2.2
    //API jar or re-run wsdl2java with "-frontend jaxws21" to generate JAX-WS 2.1
    //compliant code instead.
    public ProductServiceWSO(WebServiceFeature ... features) {
        super(WSDL_LOCATION, SERVICE, features);
    }

    //This constructor requires JAX-WS API 2.2. You will need to endorse the 2.2
    //API jar or re-run wsdl2java with "-frontend jaxws21" to generate JAX-WS 2.1
    //compliant code instead.
    public ProductServiceWSO(URL wsdlLocation, WebServiceFeature ... features) {
        super(wsdlLocation, SERVICE, features);
    }

    //This constructor requires JAX-WS API 2.2. You will need to endorse the 2.2
    //API jar or re-run wsdl2java with "-frontend jaxws21" to generate JAX-WS 2.1
    //compliant code instead.
    public ProductServiceWSO(URL wsdlLocation, QName serviceName, WebServiceFeature ... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     *
     * @return
     *     returns ProductServiceWSOPortType
     */
    @WebEndpoint(name = "productServiceWSOHttpEndpoint")
    public ProductServiceWSOPortType getProductServiceWSOHttpEndpoint() {
        return super.getPort(ProductServiceWSOHttpEndpoint, ProductServiceWSOPortType.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns ProductServiceWSOPortType
     */
    @WebEndpoint(name = "productServiceWSOHttpEndpoint")
    public ProductServiceWSOPortType getProductServiceWSOHttpEndpoint(WebServiceFeature... features) {
        return super.getPort(ProductServiceWSOHttpEndpoint, ProductServiceWSOPortType.class, features);
    }
    /**
     *
     * @return
     *     returns ProductServiceWSOPortType
     */
    @WebEndpoint(name = "productServiceWSOHttpSoap12Endpoint")
    public ProductServiceWSOPortType getProductServiceWSOHttpSoap12Endpoint() {
        return super.getPort(ProductServiceWSOHttpSoap12Endpoint, ProductServiceWSOPortType.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns ProductServiceWSOPortType
     */
    @WebEndpoint(name = "productServiceWSOHttpSoap12Endpoint")
    public ProductServiceWSOPortType getProductServiceWSOHttpSoap12Endpoint(WebServiceFeature... features) {
        return super.getPort(ProductServiceWSOHttpSoap12Endpoint, ProductServiceWSOPortType.class, features);
    }
    /**
     *
     * @return
     *     returns ProductServiceWSOPortType
     */
    @WebEndpoint(name = "productServiceWSOHttpsEndpoint")
    public ProductServiceWSOPortType getProductServiceWSOHttpsEndpoint() {
        return super.getPort(ProductServiceWSOHttpsEndpoint, ProductServiceWSOPortType.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns ProductServiceWSOPortType
     */
    @WebEndpoint(name = "productServiceWSOHttpsEndpoint")
    public ProductServiceWSOPortType getProductServiceWSOHttpsEndpoint(WebServiceFeature... features) {
        return super.getPort(ProductServiceWSOHttpsEndpoint, ProductServiceWSOPortType.class, features);
    }
    /**
     *
     * @return
     *     returns ProductServiceWSOPortType
     */
    @WebEndpoint(name = "productServiceWSOHttpSoap11Endpoint")
    public ProductServiceWSOPortType getProductServiceWSOHttpSoap11Endpoint() {
        return super.getPort(ProductServiceWSOHttpSoap11Endpoint, ProductServiceWSOPortType.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns ProductServiceWSOPortType
     */
    @WebEndpoint(name = "productServiceWSOHttpSoap11Endpoint")
    public ProductServiceWSOPortType getProductServiceWSOHttpSoap11Endpoint(WebServiceFeature... features) {
        return super.getPort(ProductServiceWSOHttpSoap11Endpoint, ProductServiceWSOPortType.class, features);
    }
    /**
     *
     * @return
     *     returns ProductServiceWSOPortType
     */
    @WebEndpoint(name = "productServiceWSOHttpsSoap11Endpoint")
    public ProductServiceWSOPortType getProductServiceWSOHttpsSoap11Endpoint() {
        return super.getPort(ProductServiceWSOHttpsSoap11Endpoint, ProductServiceWSOPortType.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns ProductServiceWSOPortType
     */
    @WebEndpoint(name = "productServiceWSOHttpsSoap11Endpoint")
    public ProductServiceWSOPortType getProductServiceWSOHttpsSoap11Endpoint(WebServiceFeature... features) {
        return super.getPort(ProductServiceWSOHttpsSoap11Endpoint, ProductServiceWSOPortType.class, features);
    }
    /**
     *
     * @return
     *     returns ProductServiceWSOPortType
     */
    @WebEndpoint(name = "productServiceWSOHttpsSoap12Endpoint")
    public ProductServiceWSOPortType getProductServiceWSOHttpsSoap12Endpoint() {
        return super.getPort(ProductServiceWSOHttpsSoap12Endpoint, ProductServiceWSOPortType.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns ProductServiceWSOPortType
     */
    @WebEndpoint(name = "productServiceWSOHttpsSoap12Endpoint")
    public ProductServiceWSOPortType getProductServiceWSOHttpsSoap12Endpoint(WebServiceFeature... features) {
        return super.getPort(ProductServiceWSOHttpsSoap12Endpoint, ProductServiceWSOPortType.class, features);
    }

}
