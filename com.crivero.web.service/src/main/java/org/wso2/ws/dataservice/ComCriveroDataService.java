package org.wso2.ws.dataservice;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;

/**
 * This class was generated by Apache CXF 3.1.7
 * 2016-10-13T11:53:01.506+02:00
 * Generated source version: 3.1.7
 * 
 */
@WebServiceClient(name = "com.crivero.data.service", 
                  wsdlLocation = "http://10.110.120.182:9763/services/com.crivero.data.service?wsdl",
                  targetNamespace = "http://ws.wso2.org/dataservice") 
public class ComCriveroDataService extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("http://ws.wso2.org/dataservice", "com.crivero.data.service");
    public final static QName SecureSOAP11Endpoint = new QName("http://ws.wso2.org/dataservice", "SecureSOAP11Endpoint");
    public final static QName SecureHTTPEndpoint = new QName("http://ws.wso2.org/dataservice", "SecureHTTPEndpoint");
    public final static QName SOAP11Endpoint = new QName("http://ws.wso2.org/dataservice", "SOAP11Endpoint");
    public final static QName SecureSOAP12Endpoint = new QName("http://ws.wso2.org/dataservice", "SecureSOAP12Endpoint");
    public final static QName HTTPEndpoint = new QName("http://ws.wso2.org/dataservice", "HTTPEndpoint");
    public final static QName SOAP12Endpoint = new QName("http://ws.wso2.org/dataservice", "SOAP12Endpoint");
    static {
        URL url = null;
        try {
            url = new URL("http://10.110.120.182:9763/services/com.crivero.data.service?wsdl");
        } catch (MalformedURLException e) {
            java.util.logging.Logger.getLogger(ComCriveroDataService.class.getName())
                .log(java.util.logging.Level.INFO, 
                     "Can not initialize the default wsdl from {0}", "http://10.110.120.182:9763/services/com.crivero.data.service?wsdl");
        }
        WSDL_LOCATION = url;
    }

    public ComCriveroDataService(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public ComCriveroDataService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public ComCriveroDataService() {
        super(WSDL_LOCATION, SERVICE);
    }
    
    public ComCriveroDataService(WebServiceFeature ... features) {
        super(WSDL_LOCATION, SERVICE, features);
    }

    public ComCriveroDataService(URL wsdlLocation, WebServiceFeature ... features) {
        super(wsdlLocation, SERVICE, features);
    }

    public ComCriveroDataService(URL wsdlLocation, QName serviceName, WebServiceFeature ... features) {
        super(wsdlLocation, serviceName, features);
    }    




    /**
     *
     * @return
     *     returns ComCriveroDataServicePortType
     */
    @WebEndpoint(name = "SecureSOAP11Endpoint")
    public ComCriveroDataServicePortType getSecureSOAP11Endpoint() {
        return super.getPort(SecureSOAP11Endpoint, ComCriveroDataServicePortType.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns ComCriveroDataServicePortType
     */
    @WebEndpoint(name = "SecureSOAP11Endpoint")
    public ComCriveroDataServicePortType getSecureSOAP11Endpoint(WebServiceFeature... features) {
        return super.getPort(SecureSOAP11Endpoint, ComCriveroDataServicePortType.class, features);
    }


    /**
     *
     * @return
     *     returns ComCriveroDataServicePortType
     */
    @WebEndpoint(name = "SecureHTTPEndpoint")
    public ComCriveroDataServicePortType getSecureHTTPEndpoint() {
        return super.getPort(SecureHTTPEndpoint, ComCriveroDataServicePortType.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns ComCriveroDataServicePortType
     */
    @WebEndpoint(name = "SecureHTTPEndpoint")
    public ComCriveroDataServicePortType getSecureHTTPEndpoint(WebServiceFeature... features) {
        return super.getPort(SecureHTTPEndpoint, ComCriveroDataServicePortType.class, features);
    }


    /**
     *
     * @return
     *     returns ComCriveroDataServicePortType
     */
    @WebEndpoint(name = "SOAP11Endpoint")
    public ComCriveroDataServicePortType getSOAP11Endpoint() {
        return super.getPort(SOAP11Endpoint, ComCriveroDataServicePortType.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns ComCriveroDataServicePortType
     */
    @WebEndpoint(name = "SOAP11Endpoint")
    public ComCriveroDataServicePortType getSOAP11Endpoint(WebServiceFeature... features) {
        return super.getPort(SOAP11Endpoint, ComCriveroDataServicePortType.class, features);
    }


    /**
     *
     * @return
     *     returns ComCriveroDataServicePortType
     */
    @WebEndpoint(name = "SecureSOAP12Endpoint")
    public ComCriveroDataServicePortType getSecureSOAP12Endpoint() {
        return super.getPort(SecureSOAP12Endpoint, ComCriveroDataServicePortType.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns ComCriveroDataServicePortType
     */
    @WebEndpoint(name = "SecureSOAP12Endpoint")
    public ComCriveroDataServicePortType getSecureSOAP12Endpoint(WebServiceFeature... features) {
        return super.getPort(SecureSOAP12Endpoint, ComCriveroDataServicePortType.class, features);
    }


    /**
     *
     * @return
     *     returns ComCriveroDataServicePortType
     */
    @WebEndpoint(name = "HTTPEndpoint")
    public ComCriveroDataServicePortType getHTTPEndpoint() {
        return super.getPort(HTTPEndpoint, ComCriveroDataServicePortType.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns ComCriveroDataServicePortType
     */
    @WebEndpoint(name = "HTTPEndpoint")
    public ComCriveroDataServicePortType getHTTPEndpoint(WebServiceFeature... features) {
        return super.getPort(HTTPEndpoint, ComCriveroDataServicePortType.class, features);
    }


    /**
     *
     * @return
     *     returns ComCriveroDataServicePortType
     */
    @WebEndpoint(name = "SOAP12Endpoint")
    public ComCriveroDataServicePortType getSOAP12Endpoint() {
        return super.getPort(SOAP12Endpoint, ComCriveroDataServicePortType.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns ComCriveroDataServicePortType
     */
    @WebEndpoint(name = "SOAP12Endpoint")
    public ComCriveroDataServicePortType getSOAP12Endpoint(WebServiceFeature... features) {
        return super.getPort(SOAP12Endpoint, ComCriveroDataServicePortType.class, features);
    }

}
